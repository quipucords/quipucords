name: Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master, "release/*", "feature/*"]

jobs:
  check-dependencies:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v4.5.0
      with:
        python-version: "3.9"
    - name: Install poetry
      run: |
        pip install -U pip
        pip install poetry
    - name: Check dependencies
      run: |
        make lock-main-requirements
        make check-requirements
  test:
    strategy:
      matrix:
        type:
          [
            lint,
            test-coverage,
            test-integration,
          ]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetches all commits/tags

      - name: Set up Python 3.9
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -U poetry
          poetry install

      - name: Docker Layer Caching
        if: ${{ success() && contains(matrix.type, 'test-integration') }}
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      # speedup linting with QPC_COMPARISON_REVISION set to a more recent commitish
      - name: Setup ENV for PR
        if: ${{ success() && github.event_name == 'pull_request' }}
        run: |
          echo "QPC_COMPARISON_REVISION=origin/${GITHUB_BASE_REF}" >> $GITHUB_ENV
      - name: Setup ENV for push
        if: ${{ success() && github.event_name != 'pull_request' }}
        run: |
          echo "QPC_COMPARISON_REVISION=HEAD^" >> $GITHUB_ENV

      - name: Run Test
        run: make ${{ matrix.type }} -k
        env:
          QPC_DBMS: postgres
          QPC_DBMS_DATABASE: postgres
          QPC_DBMS_PORT: 5432
          QPC_DBMS_USER: postgres
          QPC_DBMS_PASSWORD: postgres
          QPC_DBMS_HOST: localhost

      - name: Report coverage
        if: ${{ success() && contains(matrix.type, 'test-coverage') }}
        uses: codecov/codecov-action@v3
