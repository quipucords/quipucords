// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCredentialDialog Component should shallow render a basic component 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <Button
      active={false}
      aria-hidden="true"
      aria-label="Close"
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="close"
      disabled={false}
      onClick={[Function]}
    >
      <Icon
        name="close"
        type="pf"
      />
    </Button>
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Credential
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={true}
  >
    <Form
      bsClass="form"
      componentClass="form"
      horizontal={true}
      inline={false}
    >
      <FormGroup
        bsClass="form-group"
      >
        <Col
          bsClass="col"
          componentClass={[Function]}
          sm={5}
        >
          Source Type
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          sm={7}
        >
          <FormControl
            bsClass="form-control"
            className="quipucords-form-control"
            componentClass="input"
            readOnly={true}
            type="text"
            value=""
          />
        </Col>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        validationState={null}
      >
        <Col
          bsClass="col"
          componentClass={[Function]}
          sm={5}
        >
          Credential Name
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          sm={7}
        >
          <FormControl
            autoFocus={true}
            bsClass="form-control"
            className="quipucords-form-control"
            componentClass="input"
            onChange={[Function]}
            placeholder="Enter the credential name"
            type="text"
            value=""
          />
        </Col>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
      >
        <Col
          bsClass="col"
          componentClass={[Function]}
          sm={5}
        >
          Authentication Type
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          sm={7}
        >
          <div
            className="quipucords-dropdownselect"
          >
            <DropdownSelect
              className="form-control"
              id="auth-type-select"
              multiselect={false}
              title="Username & Password"
            >
              <MenuItem
                bsClass="dropdown"
                className={
                  Object {
                    "quipucords-dropdownselect-menuitem-selected": true,
                  }
                }
                disabled={false}
                divider={false}
                eventKey="1"
                header={false}
                key="usernamePassword"
                onClick={[Function]}
              >
                Username & Password
              </MenuItem>
              <MenuItem
                bsClass="dropdown"
                className={
                  Object {
                    "quipucords-dropdownselect-menuitem-selected": false,
                  }
                }
                disabled={false}
                divider={false}
                eventKey="2"
                header={false}
                key="sshKey"
                onClick={[Function]}
              >
                SSH Key
              </MenuItem>
            </DropdownSelect>
          </div>
        </Col>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        validationState={null}
      >
        <Col
          bsClass="col"
          componentClass={[Function]}
          sm={5}
        >
          Username
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          sm={7}
        >
          <FormControl
            bsClass="form-control"
            componentClass="input"
            onChange={[Function]}
            placeholder="Enter the username"
            type="text"
            value=""
          />
        </Col>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        validationState={null}
      >
        <Col
          bsClass="col"
          componentClass={[Function]}
          sm={5}
        >
          Password
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          sm={7}
        >
          <FormControl
            bsClass="form-control"
            componentClass="input"
            onChange={[Function]}
            placeholder="Enter the password"
            type="password"
            value=""
          />
        </Col>
      </FormGroup>
    </Form>
  </Grid>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-cancel"
      disabled={false}
      onClick={[Function]}
    >
      Cancel
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      onClick={[Function]}
    >
      Save
    </Button>
  </ModalFooter>
</Modal>
`;
