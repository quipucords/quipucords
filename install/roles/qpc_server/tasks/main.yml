---

- name: Install server setting
  set_fact:
    install_server: "{{ install_server | bool | default(true) }}"
  when: install_server is defined

- name: Defaulting server install setting
  set_fact:
    install_server: true
  when: install_server is not defined

- name: Set server directory
  set_fact:
    server_install_dir: "{{ ansible_env['SERVER_DIR'] | default(ansible_env['HOME'] + '/quipucords') }}"
  when: server_install_dir is not defined

- name: Set server port
  set_fact:
    server_port: "{{ ansible_env['SERVER_PORT'] | default('443') }}"
  when: server_port is not defined

- name: Set server url
  set_fact:
    server_url: "{{ ansible_env['SERVER_URL'] | default('https://github.com/quipucords/quipucords/releases/download/0.0.1-pilot/quipucords.pilot.e9ccd8cc05e41ee555f768eb2692f785aaf7e942.tar.gz') }}"
  when: server_url is not defined

- name: Set server image name
  set_fact:
    server_image: "{{ ansible_env['SERVER_IMAGE'] | default('quipucords:latest') }}"
  when: server_image is not defined

- name: Set server name
  set_fact:
    server_name: "{{ ansible_env['SERVER_NAME'] | default('quipucords') }}"
  when: server_name is not defined

- name: Check for server image presence
  shell: docker images -q "{{ server_image }}"
  register: docker_image_raw
  when: install_server

- name: Set docker_image_present
  set_fact:
    docker_image_present: "{{ docker_image_raw['stdout_lines']|length > 0 }}"
  when: "'stdout_lines' in docker_image_raw"

- name: Find installable local Quipucords server
  find:
    paths: "{{ pkg_install_dir }}"
    patterns: 'quipucords*.tar.gz'
  register: find_qpc_server_local_raw

- name: Set find_qpc_server_local
  set_fact:
    find_qpc_server_local: "{{ find_qpc_server_local_raw['matched'] == 1 }}"
  when:
    - find_qpc_server_local_raw is defined
    - "'matched' in find_qpc_server_local_raw"

- name: Set find_qpc_server_local_path
  set_fact:
    find_qpc_server_local_path: "{{ find_qpc_server_local_raw['files'][0]['path'] }}"
  when:
    - find_qpc_server_local is defined
    - find_qpc_server_local

- name: Obtain Quipucords server container image
  get_url:
    url: "{{ server_url }}"
    dest: "{{ pkg_install_dir }}"
    mode: 0644
  when:
    - install_server
    - not find_qpc_server_local
    - not docker_image_present

- name: Find installable local Quipucords server
  find:
    paths: "{{ pkg_install_dir }}"
    patterns: 'quipucords*.tar.gz'
  register: find_qpc_server_local_raw

- name: Set find_qpc_server_local
  set_fact:
    find_qpc_server_local: "{{ find_qpc_server_local_raw['matched'] == 1 }}"
  when:
    - find_qpc_server_local_raw is defined
    - "'matched' in find_qpc_server_local_raw"

- name: Set find_qpc_server_local_path
  set_fact:
    find_qpc_server_local_path: "{{ find_qpc_server_local_raw['files'][0]['path'] }}"
  when:
    - find_qpc_server_local is defined
    - find_qpc_server_local

- name: Load Quipucords image into local Docker registry
  shell: docker load -i "{{find_qpc_server_local_path}}"
  when:
    - install_server
    - not docker_image_present

- name: Make server home directory
  shell: mkdir -p "{{server_install_dir}}"
  when: install_server

- name: Make server log directory
  shell: mkdir -p "{{server_install_dir}}/log"
  when: install_server

- name: Make server data directory
  shell: mkdir -p "{{server_install_dir}}/data"
  when: install_server

- name: Make server sshkeys directory
  shell: mkdir -p "{{server_install_dir}}/sshkeys"
  when: install_server

- name: Check for server already running
  shell: docker ps -f name="{{ server_name }}" | grep "{{ server_name }}"
  register: docker_ps_raw
  when: install_server

- name: Set docker_server_running
  set_fact:
    docker_server_running: "{{ docker_ps_raw['stdout_lines']|length > 0 }}"
  when: "'stdout_lines' in docker_ps_raw"

- name: Start server
  shell: docker run --name "{{ server_name }}" -d -p "{{ server_port }}":443 -v "{{ server_install_dir }}"/sshkeys:/sshkeys -v "{{ server_install_dir }}"/data:/var/data -v "{{ server_install_dir }}"/log:/var/log -i "{{ server_image }}"
  when:
    - install_server
    - not docker_server_running
