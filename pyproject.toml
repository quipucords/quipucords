[tool.poetry]
name = "quipucords"
version = "1.4.4"
description = "Tool for discovery, inspection, collection, deduplication, and reporting on an IT environment."
authors = ["Quipucords Dev Team <quipucords@redhat.com>"]
readme = "README.md"
license = "GPLv3"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry.dependencies]
python = "~3.11"
ansible = ">=8,<9"
django = "^4.2.7"
django-filter = ">=22.1"
djangorestframework = "^3.14"
jmespath = "^1.0.1"
paramiko = "^3.0.0"
pexpect = "^4.8.0"
pyvmomi = "<8"
pyyaml = "^6.0.1"
requests = "^2.31.0"
whitenoise = "^6.3.0"
psycopg2 = "<3"
ansible-runner = "^2.3.1"
gunicorn = "^20.1.0"
openshift = ">=0.13"
pydantic = "^1.10.4"
django-environ = "^0.10.0"
celery = {extras = ["redis"], version = "^5.3.0"}
more-itertools = "^9.1.0"
# Note: packaging, setuptools, and gitpython are required by qpc, not necessarily quipucords.
# We include them here because current downstream build process requires them to share dependencies definition.
# We should consider removing these when we split the downstream build process to build separate container images.
packaging = "^23.1"
setuptools = "^68.0.0"
gitpython = "^3.1.35"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
coverage = "^7.0.5"
factory-boy = "^3.2.1"
pytest-cov = "<4"
pytest-django = "^4.5.2"
pytest-lazy-fixture = "^0.6.3"
pytest-mock = "^3.10.0"
pytest-recording = "^0.12.1"
pytest-timeout = "^2.1.0"
pytest-xdist = "^3.1.0"
requests-mock = "^1.10.0"
httpretty = "^1.1.4"
black = "^22.12.0"
pip-tools = "^7.3.0"
pytest-docker-tools = "^3.1.3"
watchdog = {extras = ["watchmedo"], version = "^2.2.1"}
pybuild-deps = "^0.1.1"
pytest-profiling = "^1.7.0"
ipython = "^8.10.0"
django-extensions = "^3.2.1"
notebook = "^6.5.3"
ruff = "^0.1.3"
celery = {extras = ["pytest"], version = "^5.3.0"}
debugpy = "1.6.7"

[tool.black]
target-version = ['py311']

[tool.pytest.ini_options]
pythonpath = "quipucords/"
addopts = [
    "--ds=quipucords.settings",
    "--block-network",
    "--allowed-hosts=127.0.0.1,::1,.*\\.sock",
]

[tool.ruff]
select = [
    "C90", # mccabe complexity
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "Q",   # flake8-quotes
    "W",   # pycodestyle
    "PL",  # Pylint
    "BLE", # flake8-blind-except
    "PTH", # flake8-use-pathlib
    "S",   # flake8-bandit
]
ignore = [
    "D107",
    "D203", 
    "D403",
]
src = ["quipucords"]
target-version = "py311"

[tool.ruff.isort]
known-first-party = [
    "api",
    "compat",
    "constants",
    "fingerprinter",
    "log_messages",
    "quipucords",
    "scanner",
    "tests",
    "utils",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "D104"]
"**test**" = [
    "PLC1901", 
    "PLR2004",
    "S101",
    "S105",
    "S106",
    "S107",
    "S311",
]
"quipucords/api/migrations/*.py" = ["D100", "D101"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "pep257"
