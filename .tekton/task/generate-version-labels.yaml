---
# Custom task based on upstream tekton and konflux docs.
# Given this is pipeline requires using trusted artifacts, some boilerplate is required
# https://konflux-ci.dev/docs/advanced-how-tos/using-trusted-artifacts/#migrate-to-trusted-artifacts
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: generate-version-labels
spec:
  description: |
    Custom task that generates dynamic labels based on "pyproject.toml" version. This produce the labels
    "version" and "version_minor".
  params:
    - description: The Trusted Artifact URI pointing to the artifact with the application source code.
      name: SOURCE_ARTIFACT
      type: string
  stepTemplate:
    volumeMounts:
      - mountPath: /var/workdir
        name: workdir
  volumes:
    # New volume to store a copy of the source code accessible only to this Task.
    - name: workdir
      emptyDir: {}
  results:
    - name: labels
      description: The rendered labels
      type: array
  steps:
    - name: use-trusted-artifact
      image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:8391272c4e5011120e9e7fee2c1f339e9405366110bf239dadcbc21e953ce099
      args:
        - use
        - $(params.SOURCE_ARTIFACT)=/var/workdir/source
    - name: generate-version-labels
      image: quay.io/konflux-ci/yq:latest@sha256:2d22666968448e7d6455ca2a32465ca9cfcc7e4676a86ecaa31dbea55fcf9cd1
      workingDir: /var/workdir/source
      script: |
        echo "Extracting full version (X.Y.Z) from pyproject.toml"
        VERSION=$(yq -r '.tool.poetry.version' pyproject.toml)
        echo "version=${VERSION}"

        echo "Computing minor version (X.Y only)"
        VERSION_MINOR=$(yq -r '.tool.poetry.version | split(".").[:2] | join(".")' pyproject.toml)
        echo "version_minor=${VERSION_MINOR}"

        echo "Writing results..."
        # version and version_minor are the labels expected in downstream RPA configuration
        echo [\"version=${VERSION}\", \"version_minor=${VERSION_MINOR}\"] | tee "$(results.labels.path)"
