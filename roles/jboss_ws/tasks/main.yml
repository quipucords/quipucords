---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "jboss_web_server"

# ----------------------------- FIND JWS_HOME ---------------------------------

# If JWS is not on target server, this will only return whatever directory is above TOMCAT_HOME
- name: search for JWS_HOME in tomcat process
  raw: ps -ef | grep tomcat | grep java |awk -F"catalina.base=" '{split($2,a," ");print FS a[1]}' |  awk 'BEGIN {FS="/";OFS="/";}{ $1=""; $NF="";print}'
  register: jws_find_home_from_tomcat_process
  ignore_errors: yes

  # If client has not renamed default JWS_HOME folder and followed recommended zip file install instructions, JWS_HOME should be in /opt.
- name: search JWS_HOME in search directories
  raw: find {{search_directories}} -type d 2>/dev/null | egrep '*(ews|jws)*[0-99]\.[0-99]$' 
  register: jws_find_home_from_search
  ignore_errors: yes
  when: 'jboss_ws_ext'

- name: combine JWS_HOME candidates into a list
  set_fact:
    jws_home_candidates: "{{
        (jws_find_home_from_search.get('stdout_lines', []) +
         jws_find_home_from_tomcat_process.get('stdout_lines', []))|difference(['']) | unique }}"
  ignore_errors: yes

- name: ls JWS_HOME
  raw: ls -d1 "{{ item }}" 2>/dev/null
  register: jws_find_home
  with_items: "{{ jws_home_candidates }}"
  ignore_errors: yes

- name: set jws_home based on jws_find_home
  set_fact:
      jws_home: "{{ jws_find_home['results'][0]['stdout_lines'][0] }}"
  ignore_errors: yes
  when: 
    - 'jws_find_home is defined'
    - "'results' in jws_find_home"
    - "jws_find_home['results'] | length > 0"
    - "'stdout_lines' in jws_find_home['results'][0]"
    - "jws_find_home['results'][0]['stdout_lines'] | length > 0"

# ------------------------------ DETECT JWS/EWS -------------------------------
- name: check jws presence with yum
  raw: yum grouplist jws3 jws3plus jws5 2>/dev/null | grep -A1 'Installed Groups:' | grep 'Red Hat JBoss Web Server [0-99]' 
  register: jws_installed_with_rpm
  ignore_errors: yes

  # If tomcat was installed with a Redhat product, a 'redhat' string can be found in certain files
- name: determine if tomcat is installed from upstream or as part of redhat product
  raw: \[ $(grep -iR redhat "{{ jws_home }}"/tomcat[0-99] 2>/dev/null| wc -l) != 0 \] && echo False || echo True
  register: tomcat_is_part_of_redhat_product
  ignore_errors: yes
  when: 'jws_home is defined'

  # detect jws if installed with zip even when no tomcat process is running
- name: see if JBossEULA.txt exists
  raw: ls "{{ jws_home }}"/JBossEULA.txt
  register: jws_has_eula_txt_file
  ignore_errors: yes
  when: 'jws_home is defined'

# ------------------------------ FIND JWS VERSION -----------------------------
  # Additional methods of finding different versions can be appended to the list
  # under 'with_items' to create array of possibilities for the version. A map of
  # the raw stdout value to the correctly formatted version string should be appended
  # to JWS_CLASSIFICATIONS in jboss_web_server.py

  # 'with_items' raw commands purpose:
  # Ver 2.0.1 and below have a unique combination of httpd and tomcat versions
  # Ver 3.x.x mentioned in id tags in “TOMCAT_HOME/webapps/docs/changelog.html”
  # Ver 5.0.0 has version.txt in JWS_HOME when installed with zip file
  # Ver 5.x.x has a jws5-tomcat.service unit installed.

- name: find JWS version
  raw: "{{ item }}"
  register: jws_version
  ignore_errors: yes
  with_items:
    - ."{{ jws_home }}"/httpd/sbin/httpd -v | grep Apache 2>/dev/null
    - awk -F 'id=' '/JWS/ {print substr($2,16,9)}' "{{ jws_home }}"/tomcat?/webapps/docs/changelog.html 2>/dev/null | grep JWS | head -n1 
    - cat "{{ jws_home }}"/version.txt  2>/dev/null| grep "Red Hat JBoss Web Server"
    - systemctl status jws5-tomcat.service 2>/dev/null | grep "Apache Tomcat Web" | grep -o jws5 
    - (echo -n $("{{ jws_home }}"/httpd/sbin/httpd -v | grep Apache); echo $(./"{{ jws_home }}"/tomcat*/bin/version.sh 2>/dev/null | grep "Server version")) | sed -e 's/Server version: //g'
  when: 'jws_home is defined' 
