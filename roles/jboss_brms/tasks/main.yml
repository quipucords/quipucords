
---

# Use locate to look for business-central and kie-server
    - name: find business-central candidates
      raw: locate --basename business-central | egrep '.*/business-central(.war)?/?$'
      register: internal_jboss_brms_business_central_candidates
      ignore_errors: yes
      when: 'have_locate'

    - name: set jboss_brms_business_central_candidates
      set_fact:
        jboss_brms_business_central_candidates: "{{ internal_jboss_brms_business_central_candidates.get('stdout_lines', []) }}"

    - name: find kie-server candidates
      raw: locate --basename 'kie-server*' | egrep --invert-match '(.*.xml)|(.*.jar)'
      register: internal_jboss_brms_kie_server_candidates
      ignore_errors: yes
      when: 'have_locate'
    
    - name: set jboss_brms_kie_server_candidates
      set_fact:
        jboss_brms_kie_server_candidates: "{{ internal_jboss_brms_kie_server_candidates.get('stdout_lines', []) }}"

# Combine the above with any EAP_HOME directories we've found
    - name: create list if eap_home_candidates is not empty
      set_fact:
        business_central_candidates_eap: "{{ [] }}"
        kie_server_candidates_eap: "{{ [] }}"

    - name: add eap_home_candidates to lists
      set_fact:
        business_central_candidates_eap: "{{ business_central_candidates_eap + [item + '/standalone/deployments/business-central.war'] }}"
        kie_server_candidates_eap: "{{ kie_server_candidates_eap + [item + '/standalone/deployments/kie-server.war'] }}"
      with_items: "{{ eap_home_candidates }}"
      when: 'eap_home_candidates is defined'

    - name: combine special directory candidates into single list
      set_fact:
        business_central_candidates: "{{ (jboss_brms_business_central_candidates + business_central_candidates_eap) | unique }}"
        kie_server_candidates: "{{ (jboss_brms_kie_server_candidates + kie_server_candidates_eap) | unique }}"

    - name: cat MANIFEST.MF files
      raw: cat {{ item }}/META-INF/MANIFEST.MF
      register: internal_jboss_brms_manifest_mf
      ignore_errors: yes
      with_items: "{{ business_central_candidates + kie_server_candidates }}"
    
    - name: set jboss_brms_manifest_mf
      set_fact:
        jboss_brms_manifest_mf: "{{ internal_jboss_brms_manifest_mf }}"

    - name: look for kie-api files inside candidate directories
      raw: ls -1 {{ item }}/WEB-INF/lib/kie-api*
      register: internal_jboss_brms_kie_in_business_central
      ignore_errors: yes
      with_items: "{{ business_central_candidates }}"

    - name: set jboss_brms_kie_in_business_central
      set_fact:
        jboss_brms_kie_in_business_central: "{{ internal_jboss_brms_kie_in_business_central }}"

    - name: look for all kie-api files on the system
      raw: locate --basename 'kie-api*'
      register: internal_jboss_brms_locate_kie_api
      ignore_errors: yes

    - name: set jboss_brms_locate_kie_api
      set_fact:
        jboss_brms_locate_kie_api: "{{ internal_jboss_brms_locate_kie_api.get('stdout_lines', []) }}"
