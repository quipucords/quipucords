
---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "jboss_brms"

# Use locate to look for business-central, decision-central, and kie-server
- name: find business-central candidates
  raw: locate --basename business-central | egrep '.*/business-central(.war)?/?$'
  register: internal_jboss_brms_business_central_candidates
  ignore_errors: yes
  when: 'have_locate and jboss_brms'

- name: set jboss_brms_business_central_candidates
  set_fact:
    jboss_brms_business_central_candidates: "{{ internal_jboss_brms_business_central_candidates.get('stdout_lines', []) }}"
  ignore_errors: yes
  when: 'jboss_brms'

- name: find decision-central candidates
  raw: locate --basename decision-central | egrep '.*/decision-central(.war)?/?$'
  register: internal_jboss_brms_decision_central_candidates
  ignore_errors: yes
  when: 'have_locate and jboss_brms'

- name: set jboss_brms_decision_central_candidates
  set_fact:
    jboss_brms_decision_central_candidates: "{{ internal_jboss_brms_decision_central_candidates.get('stdout_lines', []) }}"
  ignore_errors: yes
  when: 'jboss_brms'

- name: find kie-server candidates
  raw: locate --basename 'kie-server*' | egrep --invert-match '(.*.xml)|(.*.jar)'
  register: internal_jboss_brms_kie_server_candidates
  ignore_errors: yes
  when: 'have_locate and jboss_brms'

- name: set jboss_brms_kie_server_candidates
  set_fact:
    jboss_brms_kie_server_candidates: "{{ internal_jboss_brms_kie_server_candidates.get('stdout_lines', []) }}"
  ignore_errors: yes
  when: 'jboss_brms'

- name: search filesystem for kie-server candidates
  raw: find {{search_directories}} -xdev -name kie*.war 2> /dev/null
  register: internal_jboss_brms_kie_search_candidates
  ignore_errors: yes
  when: 'jboss_brms_ext'

- name: set kie_search_candidates
  set_fact:
    kie_search_candidates: "{{ internal_jboss_brms_kie_search_candidates.get('stdout_lines', []) }}"
  ignore_errors: yes

# Combine the above with any EAP_HOME directories we've found
- name: create list if eap_home_candidates is not empty
  set_fact:
    business_central_candidates_eap: "{{ [] }}"
    decision_central_candidates_eap: "{{ [] }}"
    kie_server_candidates_eap: "{{ [] }}"
  ignore_errors: yes
  when: 'jboss_brms'

- name: add eap_home_candidates to lists
  set_fact:
    business_central_candidates_eap: "{{ business_central_candidates_eap + [item + '/standalone/deployments/business-central.war'] }}"
    decision_central_candidates_eap: "{{ decision_central_candidates_eap + [item + '/standalone/deployments/decision-central.war'] }}"
    kie_server_candidates_eap: "{{ kie_server_candidates_eap + [item + '/standalone/deployments/kie-server.war'] }}"
  with_items: "{{ eap_home_candidates }}"
  ignore_errors: yes
  when: 'eap_home_candidates is defined and jboss_brms'

- name: combine special directory candidates into single list
  set_fact:
    business_central_candidates: "{{ (jboss_brms_business_central_candidates + business_central_candidates_eap) | unique }}"
    decision_central_candidates: "{{ (jboss_brms_decision_central_candidates + decision_central_candidates_eap) | unique }}"
    kie_server_candidates: "{{ (jboss_brms_kie_server_candidates + kie_server_candidates_eap) | unique }}"
  ignore_errors: yes
  when: 'jboss_brms'

- name: cat MANIFEST.MF files
  raw: cat '{{ item }}/META-INF/MANIFEST.MF' 2>/dev/null
  register: jboss_brms_manifest_mf
  ignore_errors: yes
  with_items: "{{ business_central_candidates + decision_central_candidates + kie_server_candidates + kie_search_candidates }}"
  when: 'jboss_brms'

- name: look for kie-api files inside candidate directories
  raw: ls -1 "{{ item }}"/WEB-INF/lib/kie-api* 2>/dev/null
  register: jboss_brms_kie_in_business_central
  ignore_errors: yes
  with_items: "{{ business_central_candidates + decision_central_candidates }}"
  when: 'jboss_brms'

- name: look for all kie-api files on the system
  raw: locate --basename 'kie-api*'
  register: jboss_brms_locate_kie_api
  ignore_errors: yes
  when: 'have_locate and jboss_brms'

# Tasks that do filesystem scans. This will scan linux systems for
# JBoss BRMS or Drools Installations
- name: Gather jboss.brms.kie-api-ver
  raw: find {{search_directories}} -xdev -name kie-api* 2> /dev/null | sort -u
  register: jboss_brms_kie_api_ver
  ignore_errors: yes
  when: 'jboss_brms_ext'

- name: Gather jboss.brms.drools-core-ver
  raw: find {{search_directories}} -xdev -name drools-core* 2> /dev/null | sort -u
  register: jboss_brms_drools_core_ver
  ignore_errors: yes
  when: 'jboss_brms_ext'

- name: Gather jboss.brms.kie-war-ver
  raw: OIFS="$IFS"; IFS=$'\n'; for war in $(find {{search_directories}} -xdev -name kie*.war 2> /dev/null); do if [[ -d  "$war" ]]; then cat "$war"/META-INF/MANIFEST.MF 2> /dev/null | grep Implementation-Version | sed "s/Implementation-Version://g" | sed "s/ //g" | sed 's/\r$//' | sort -u; else fgrep -irsal kie-api "$war" | egrep -o "[0-9]\.[0-9]\.[0-9].*-" | sed "s/-$//g" | sed 's/\r$//' | sort -u; fi; done; IFS="$OIFS"
  register: jboss_brms_kie_war_ver
  ignore_errors: yes
  when: 'jboss_brms_ext'
