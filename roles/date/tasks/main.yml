---

- name: gather date.date fact
  raw: date
  register: date_date
  ignore_errors: yes

- name: gather date.anaconda_log fact
  raw: ls --full-time /root/anaconda-ks.cfg | grep -o '[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}'
  register: internal_date_anaconda_log_cmd
  become: yes
  ignore_errors: yes

- name: extract result value for date.anaconda_log
  set_fact:
    date_anaconda_log: "{{ internal_date_anaconda_log_cmd['stdout'] | trim | default('error') }}"
  when: '"stdout" in internal_date_anaconda_log_cmd'

- name: handle failure value for date.anaconda_log
  set_fact:
    date_anaconda_log: "error"
  when: '"stdout" not in internal_date_anaconda_log_cmd'

- name: gather date.machine_id fact
  raw: ls --full-time /etc/machine-id | grep -o '[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}'
  register: date_machine_id
  ignore_errors: yes

- name: gather date.filesystem_create fact
  raw: fs_date=$(tune2fs -l $(mount | egrep '/ type' | grep -o '/dev.* on' | sed -e 's/\on//g') | grep 'Filesystem created' | sed 's/Filesystem created:\s*//g'); if [[ $fs_date ]]; then date +'%F' -d \"$fs_date\"; else echo "" ; fi
  register: date_filesystem_create
  ignore_errors: yes
  when: 'internal_have_tune2fs'

- name: gather date.yum_history fact
  raw: yum history 2>/dev/null  | tail -n 2 | grep -o '[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}'
  register: internal_date_yum_history_cmd
  become: yes
  ignore_errors: yes
  when: 'internal_have_yum'

- name: extract result value for date.yum_history
  set_fact:
    date_yum_history: "{{  internal_date_yum_history_cmd['stdout_lines'] | select | first | default('error') if internal_have_yum else 'N/A (yum not found)' }}"
  when: '"stdout_lines" in internal_date_yum_history_cmd'

- name: handle failure value for date.yum_history
  set_fact:
    date_yum_history: "{{ 'error' if internal_have_yum else 'N/A (yum not found)' }}"
  when: '"stdout_lines" not in internal_date_yum_history_cmd'
