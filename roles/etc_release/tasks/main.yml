---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "etc_release"

- name: initialize etc_release data
  set_fact:
    etc_release_name: ""
    etc_release_version: ""
    etc_release_release: ""
  ignore_errors: yes

- name: set internal variable with list of known standard /etc/*release files
  set_fact:
    internal_distro_standard_release:
      - "/etc/redhat-release"  # Red Hat
      - "/etc/SuSE-release"  # SuSE
      - "/etc/mandriva-release"  # Mandriva
      - "/etc/enterprise-release"  # Oracle Linux
      - "/etc/sun-release"  # Sun JDS
      - "/etc/slackware-release"  # Slackware
      - "/etc/ovs-release"  # OVS
      - "/etc/arch-release"  # Arch Linux
      - "/etc/release"  # generic
  ignore_errors: yes

- name: check which /etc/*release file exists
  raw: |
    for i in \
      /etc/debian_version \
      {{ internal_distro_standard_release|join(' ') }} \
      /etc/lsb-release \
    ; do
      [ -f $i ] && echo $i && break
    done;
  register: internal_release_found
  ignore_errors: yes

- name: set internal_release_file when a release file is found
  set_fact: internal_release_file={{ internal_release_found["stdout_lines"][0] }}
  ignore_errors: yes
  when:
    - '"stdout_lines" in internal_release_found'
    - 'internal_release_found["stdout_lines"]|length > 0'
    - 'internal_release_found["stdout_lines"][0]|length > 0'

- name: set internal_release_file_content based on internal_release_file
  raw: cat {{ internal_release_file }}
  register: internal_release_file_content
  ignore_errors: yes
  when:
    - internal_release_file is defined
    - 'internal_release_file != "/etc/lsb-release"'

# set facts for Debian release

- name: set etc_release facts for Debian based on internal_release_file_content
  set_fact:
    etc_release_name: "Debian"
    etc_release_version: "{{ internal_release_file_content['stdout_lines'][0] }}"
    etc_release_release: "{{ 'Debian ' + internal_release_file_content['stdout_lines'][0] }}"
  ignore_errors: yes
  when:
    - internal_release_file is defined
    - 'internal_release_file == "/etc/debian_version"'
    - '"stdout_lines" in internal_release_file_content'
    - 'internal_release_file_content["stdout_lines"]|length > 0'

# set facts for all other distros that use known standard /etc/*release file

- name: set etc_release facts for typical distros based on internal_release_file_content
  set_fact:
    etc_release_name: "{{ internal_release_file_content['stdout_lines'][0].split('release')[0].strip() }}"
    etc_release_version: "{{ internal_release_file_content['stdout_lines'][0].split('release')[1].strip() }}"
    etc_release_release: "{{ internal_release_file_content['stdout_lines'][0].strip() }}"
  ignore_errors: yes
  when:
    - internal_release_file is defined
    - 'internal_release_file in internal_distro_standard_release'
    - '"stdout_lines" in internal_release_file_content'
    - 'internal_release_file_content["stdout_lines"]|length > 0'
    - '"release" in internal_release_file_content["stdout_lines"][0]'

# set facts using Linux Standard Base when no other release file was found

- name: set os and version based on /etc/lsb-release output
  raw: . /etc/lsb-release && echo "$DISTRIB_ID" && echo "$DISTRIB_RELEASE"
  register: internal_lsb_release
  ignore_errors: yes
  when:
    - internal_release_file is defined
    - 'internal_release_file == "/etc/lsb-release"'

- name: set os and version using `lsb_release -si -sr`
  raw: lsb_release -si -sr
  register: internal_lsb_release
  ignore_errors: yes
  when:
    - 'etc_release_name == ""'
    - '"stdout_lines" not in internal_lsb_release or internal_lsb_release["stdout_lines"]|join("")|length == 0'

- name: set etc_release facts based on internal_lsb_release
  set_fact:
    etc_release_name: '{{ internal_lsb_release["stdout_lines"][0] }}'
    etc_release_version: '{{ internal_lsb_release["stdout_lines"][1] }}'
    etc_release_release: '{{ internal_lsb_release["stdout_lines"][0] + " " + internal_lsb_release["stdout_lines"][1] }}'
  ignore_errors: yes
  when:
    - internal_lsb_release is defined
    - '"stdout_lines" in internal_lsb_release'
    - 'internal_lsb_release["stdout_lines"]|length == 2'

# set facts using uname if we still haven't identified the distro

- name: set os and kernel release using `uname -s -r`
  raw: uname -s -r
  register: internal_uname_version
  ignore_errors: yes
  when: 'etc_release_name == ""'

- name: set etc_release facts based on internal_uname_version
  set_fact:
    etc_release_name: "{{ internal_uname_version['stdout_lines'][0].split(' ')[:-1]|join(' ') }}"
    etc_release_version: "{{ internal_uname_version['stdout_lines'][0].split(' ')[-1] }}"
    etc_release_release: "{{ internal_uname_version['stdout_lines'][0] }}"
  ignore_errors: yes
  when:
    - internal_uname_version is defined
    - '"stdout_lines" in internal_uname_version'
    - 'internal_uname_version["stdout_lines"]|length > 0'
