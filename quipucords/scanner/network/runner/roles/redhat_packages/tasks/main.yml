---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "redhat_packages"

- name: check to see if any red hat rpms are installed
  raw: export LANG=C LC_ALL=C; if [ $(rpm -qa --qf "%{DSAHEADER:pgpsig}|%{RSAHEADER:pgpsig}|%{SIGGPG:pgpsig}|%{SIGPGP:pgpsig}\n" | grep 'Key ID 199e2f91fd431d51\|Key ID 5326810137017186\|Key ID 219180cddb42a60e\|Key ID 7514f77d8366b0d9\|Key ID 45689c882fa658e0' | wc -l) -gt 0 ]; then echo "Y"; else echo "N"; fi
  register: internal_redhat_packages_gpg_is_redhat_cmd
  ignore_errors: yes
  when: internal_have_rpm_user

# Using json_query means that the filter will always succeed and
# return a result, which simplifies later processing. If
# redhat_packages_gpg_is_redhat doesn't have 'stdout_lines' (because
# it failed or never ran), then the result will be null.
- name: set fact whether red hat rpms are installed or not
  set_fact:
    redhat_packages_gpg_is_redhat: '{{ (internal_redhat_packages_gpg_is_redhat_cmd | json_query("stdout_lines[-1]")) == "Y" }}'
  ignore_errors: yes

- name: gather the number of all installed red hat packages filtered by gpg keys
  raw: export LANG=C LC_ALL=C; rpm -qa --qf "%{DSAHEADER:pgpsig}|%{RSAHEADER:pgpsig}|%{SIGGPG:pgpsig}|%{SIGPGP:pgpsig}\n" 2> /dev/null | grep 'Key ID 199e2f91fd431d51\|Key ID 5326810137017186\|Key ID 219180cddb42a60e\|Key ID 7514f77d8366b0d9\|Key ID 45689c882fa658e0' | wc -l
  register: internal_redhat_packages_gpg_num_rh_packages
  ignore_errors: yes
  when: internal_have_rpm_user

- name: set fact of number of installed red hat packages filtered by gpg keys
  set_fact:
    redhat_packages_gpg_num_rh_packages: '{{ internal_redhat_packages_gpg_num_rh_packages | json_query("stdout_lines[-1]") }}'
  ignore_errors: yes

- name: gather total number of installed packages
  raw: export LANG=C LC_ALL=C; rpm -qa | wc -l
  register: internal_redhat_packages_all_count
  ignore_errors: yes
  when: internal_have_rpm_user

- name: set fact of number of all installed rpm packages
  set_fact:
    redhat_packages_gpg_num_installed_packages: '{{ internal_redhat_packages_all_count | json_query("stdout_lines[-1]") }}'
  ignore_errors: yes

- name: gather the last installed red hat package filtered by gpg keys
  raw: export LANG=C LC_ALL=C; rpm -qa --qf "%{INSTALLTIME} %{DSAHEADER:pgpsig}|%{RSAHEADER:pgpsig}|%{SIGGPG:pgpsig}|%{SIGPGP:pgpsig} |%{NAME}-%{VERSION} Installed:%{INSTALLTIME:date}\n" | grep 'Key ID 199e2f91fd431d51\|Key ID 5326810137017186\|Key ID 219180cddb42a60e\|Key ID 7514f77d8366b0d9\|Key ID 45689c882fa658e0' | sort -nr | head -n 1 | cut -d"|" -f2
  register: internal_redhat_packages_gpg_last_installed
  ignore_errors: yes
  when:
    internal_have_rpm_user and redhat_packages_gpg_is_redhat

- name: set fact of last installed rh package filtered by gpg key
  set_fact:
    redhat_packages_gpg_last_installed: '{{ internal_redhat_packages_gpg_last_installed | json_query("stdout_lines[-1]") }}'
  ignore_errors: yes
  when:
    internal_have_rpm_user and redhat_packages_gpg_is_redhat

- name: gather the last built red hat package filtered by gpg keys
  raw: export LANG=C LC_ALL=C; rpm -qa --qf "%{BUILDTIME} %{DSAHEADER:pgpsig}|%{RSAHEADER:pgpsig}|%{SIGGPG:pgpsig}|%{SIGPGP:pgpsig} |%{NAME}-%{VERSION} Built:%{BUILDTIME:date}\n" | grep 'Key ID 199e2f91fd431d51\|Key ID 5326810137017186\|Key ID 219180cddb42a60e\|Key ID 7514f77d8366b0d9\|Key ID 45689c882fa658e0' | sort -nr | head -n 1 | cut -d"|" -f2
  register: internal_redhat_packages_gpg_last_built
  ignore_errors: yes
  when:
    internal_have_rpm_user and redhat_packages_gpg_is_redhat

- name: set fact of last built rh package filtered by gpg key
  set_fact:
    redhat_packages_gpg_last_built: '{{ internal_redhat_packages_gpg_last_built | json_query("stdout_lines[-1]") }}'
  ignore_errors: yes
  when:
    internal_have_rpm_user and redhat_packages_gpg_is_redhat

- name: gather redhat-packages.certs fact
  raw: export LANG=C LC_ALL=C; ls /etc/pki/product/ /etc/pki/product-default/ 2> /dev/null |grep '.pem' | sort -u | tr '\n' ';'
  register: internal_redhat_packages_certs
  ignore_errors: yes

- name: set redhat_packages_certs fact
  set_fact:
    redhat_packages_certs: "{{ internal_redhat_packages_certs }}"
  ignore_errors: yes

- name: gather enabled repositories
  raw: export LANG=C LC_ALL=C; yum -C repolist enabled 2> /dev/null
  register: internal_yum_enabled_repolist
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo and internal_have_yum'

- name: set yum_enabled_repolist fact
  set_fact:
    yum_enabled_repolist: "{{ internal_yum_enabled_repolist }}"
  ignore_errors: yes
