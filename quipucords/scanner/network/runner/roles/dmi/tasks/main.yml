---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "dmi"

- name: gather dmi.bios-vendor fact
  raw: export LANG=C LC_ALL=C; /usr/sbin/dmidecode -s bios-vendor 2>/dev/null
  register: internal_dmi_bios_vendor_cmd
  ignore_errors: yes
  become: yes
  when: 'user_has_sudo and internal_have_dmidecode'

- name: extract result value for dmi.bios-vendor
  set_fact:
    dmi_bios_vendor: "{{ internal_dmi_bios_vendor_cmd['stdout_lines'][-1] | trim if internal_have_dmidecode else '' }}"
  ignore_errors: yes
  when:
    - '"stdout_lines" in internal_dmi_bios_vendor_cmd'
    - 'internal_dmi_bios_vendor_cmd["stdout_lines"] | length > 0'

- name: handle failure value for dmi.bios-vendor
  set_fact:
    dmi_bios_vendor: ""
  ignore_errors: yes
  when: '"stdout_lines" not in internal_dmi_bios_vendor_cmd'

- name: gather dmi.bios-version fact
  raw: export LANG=C LC_ALL=C; /usr/sbin/dmidecode -s bios-version 2>/dev/null
  register: internal_dmi_bios_version_cmd
  ignore_errors: yes
  become: yes
  when: 'user_has_sudo and internal_have_dmidecode'

- name: extract result value for dmi.bios-version
  set_fact:
    dmi_bios_version: "{{ internal_dmi_bios_version_cmd['stdout_lines'][-1] | trim if internal_have_dmidecode else '' }}"
  ignore_errors: yes
  when:
    - '"stdout_lines" in internal_dmi_bios_version_cmd'
    - 'internal_dmi_bios_version_cmd["stdout_lines"] | length > 0'

- name: handle failure value for dmi.bios-version
  set_fact:
    dmi_bios_version: ""
  ignore_errors: yes
  when: '"stdout_lines" not in internal_dmi_bios_version_cmd'

- name: gather dmi.system-manufacturer fact
  raw: export LANG=C LC_ALL=C; /usr/sbin/dmidecode 2>/dev/null | grep -A4 'System Information' | grep 'Manufacturer' | sed -n -e 's/^.*Manufacturer:\s//p'
  register: internal_dmi_system_manufacturer_cmd
  ignore_errors: yes
  become: yes
  when: 'user_has_sudo and internal_have_dmidecode'

- name: extract result value for dmi.system-manufacturer
  set_fact:
    dmi_system_manufacturer: "{{ internal_dmi_system_manufacturer_cmd['stdout_lines'][-1] | trim if internal_have_dmidecode else '' }}"
  ignore_errors: yes
  when:
    - '"stdout_lines" in internal_dmi_system_manufacturer_cmd'
    - 'internal_dmi_system_manufacturer_cmd["stdout_lines"] | length > 0'

- name: handle failure value for dmi.system-manufacturer
  set_fact:
    dmi_system_manufacturer: ""
  ignore_errors: yes
  when: '"stdout_lines" not in internal_dmi_system_manufacturer_cmd'

- name: gather dmi.system-uuid fact
  raw: export LANG=C LC_ALL=C; /usr/sbin/dmidecode -s system-uuid 2>/dev/null
  register: internal_dmi_system_uuid_cmd
  ignore_errors: yes
  become: yes
  when: 'user_has_sudo and internal_have_dmidecode'

- name: set internal_dmi_system_uuid fact
  set_fact:
    internal_dmi_system_uuid: "{{ internal_dmi_system_uuid_cmd}}"
  ignore_errors: yes

- name: initialize dmi_system_uuid
  set_fact:
    dmi_system_uuid: "QPC_FORCE_POST_PROCESS"
  ignore_errors: yes
