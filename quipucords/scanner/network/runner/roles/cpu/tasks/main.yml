---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "cpu"

- name: gather internal_cpu_vendor_id
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep '^vendor_id\s*' | sed -n -e 's/^.*vendor_id\s*.\s*//p'
  register: internal_cpu_vendor_id
  ignore_errors: yes

- name: set cpu_vendor_id fact
  set_fact:
    cpu_vendor_id: "{{internal_cpu_vendor_id}}"
  ignore_errors: yes

- name: gather internal_cpu_model_name
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep '^model name\s*.' | sed -n -e 's/^.*model name\s*.\s*//p'
  register: internal_cpu_model_name
  ignore_errors: yes

- name: set cpu_model_name fact
  set_fact:
    cpu_model_name: "{{internal_cpu_model_name}}"
  ignore_errors: yes

- name: gather internal_cpu_model_ver fact
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep '^model\s*:' | sed -n -e 's/^.*model\s*:\s*//p'
  register: internal_cpu_model_ver
  ignore_errors: yes

- name: gather cpu_model_ver fact
  set_fact:
    cpu_model_ver: "{{internal_cpu_model_ver}}"
  ignore_errors: yes

- name: gather cpu.count fact
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep '^processor\s*.' | wc -l
  register: internal_cpu_count_cmd
  ignore_errors: yes

- name: extract or default cpu.count fact
  set_fact:
    cpu_count: "{{ internal_cpu_count_cmd | json_query('stdout_lines[-1]') }}"
  ignore_errors: yes

- name: gather cpu.core_per_socket fact
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep '^cpu cores\s*.' | sed -n -e 's/^.*cpu cores\s*.\s*//p'
  register: internal_cpu_core_per_socket_cmd
  ignore_errors: yes

- name: extract or default cpu.core_per_socket fact
  set_fact:
      cpu_core_per_socket: "{{ internal_cpu_core_per_socket_cmd | json_query('stdout_lines[-1]') }}"
  ignore_errors: yes

- name: gather cpu.siblings fact
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep '^siblings\s*.' | sed -n -e 's/^.*siblings\s*.\s*//p'
  register: internal_cpu_siblings_cmd
  ignore_errors: yes

- name: extract or default cpu.siblings fact
  set_fact:
    cpu_siblings: "{{ internal_cpu_siblings_cmd | json_query('stdout_lines[-1]') }}"
  ignore_errors: yes

- name: determine cpu.hyperthreading fact
  set_fact:
    cpu_hyperthreading: "{{ cpu_siblings != None and (cpu_siblings | int) == ((cpu_core_per_socket | int) * 2) }}"
  ignore_errors: yes

- name: gather cpu.socket_count fact
  raw: export LANG=C LC_ALL=C; dmidecode -t 4 | egrep 'Designation|Status'
  register: internal_cpu_socket_count_dmi_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo and internal_have_dmidecode'

- name: set internal_cpu_socket_count_dmi fact
  set_fact:
    internal_cpu_socket_count_dmi: "{{internal_cpu_socket_count_dmi_cmd}}"
  ignore_errors: yes

- name: gather cpu.socket_count fact with fallback
  raw: export LANG=C LC_ALL=C; cat /proc/cpuinfo 2>/dev/null | grep 'physical id' | sort -u | wc -l
  register: internal_cpu_socket_count_cpuinfo_cmd
  ignore_errors: yes

- name: set internal_cpu_socket_count_cpuinfo fact
  set_fact:
    internal_cpu_socket_count_cpuinfo: "{{internal_cpu_socket_count_cpuinfo_cmd}}"
  ignore_errors: yes

- name: initialize cpu.socket_count fact
  set_fact:
    cpu_socket_count: "QPC_FORCE_POST_PROCESS"
  ignore_errors: yes

- name: initialize cpu.core_count fact
  set_fact:
    cpu_core_count: "QPC_FORCE_POST_PROCESS"
  ignore_errors: yes
