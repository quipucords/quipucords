---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "check_dependencies"

- name: test if user has sudo cmd
  raw: export LANG=C LC_ALL=C; echo "user has sudo" 2>/dev/null
  register: internal_user_has_sudo_cmd
  become: yes
  ignore_errors: yes

- name: test if user has sudo cmd
  set_fact:
    user_has_sudo: "{{ internal_user_has_sudo_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_dmidecode_cmd
  raw: export LANG=C LC_ALL=C; command -v dmidecode
  register: internal_have_dmidecode_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_dmidecode
  set_fact:
    internal_have_dmidecode: "{{ internal_have_dmidecode_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_tune2fs_user_cmd
  raw: export LANG=C LC_ALL=C; command -v tune2fs
  register: internal_have_tune2fs_user_cmd
  ignore_errors: yes

- name: set internal_have_tune2fs_user
  set_fact:
    internal_have_tune2fs_user: "{{ internal_have_tune2fs_user_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_yum_cmd
  raw: export LANG=C LC_ALL=C; command -v yum
  become: yes
  register: internal_have_yum_cmd
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_yum
  set_fact:
    internal_have_yum: "{{ internal_have_yum_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_java_cmd
  raw: export LANG=C LC_ALL=C; command -v java
  register: internal_have_java_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_java
  set_fact:
    internal_have_java: "{{ internal_have_java_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_rpm_user_cmd
  raw: export LANG=C LC_ALL=C; command -v rpm
  register: internal_have_rpm_user_cmd
  ignore_errors: yes

- name: set internal_have_rpm_user
  set_fact:
    internal_have_rpm_user: "{{ internal_have_rpm_user_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_subscription_manager_cmd
  raw: export LANG=C LC_ALL=C; command -v subscription-manager
  register: internal_have_subscription_manager_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_subscription_manager
  set_fact:
    internal_have_subscription_manager: "{{ internal_have_subscription_manager_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_virsh_user_cmd
  raw: export LANG=C LC_ALL=C; command -v virsh
  register: internal_have_virsh_user_cmd
  ignore_errors: yes

- name: set internal_have_virsh_user
  set_fact:
    internal_have_virsh_user: "{{ internal_have_virsh_user_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_virt_what_cmd
  raw: export LANG=C LC_ALL=C; command -v virt-what
  become: yes
  register: internal_have_virt_what_cmd
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_virt_what
  set_fact:
    internal_have_virt_what: "{{ internal_have_virt_what_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_locate_cmd
  raw: export LANG=C LC_ALL=C; command -v locate
  become: yes
  register: internal_have_locate_cmd
  ignore_errors: yes
  when: 'user_has_sudo'

- name: test locate command
  raw: export LANG=C LC_ALL=C; locate echo
  register: internal_test_locate
  ignore_errors: yes
  when: (internal_have_locate_cmd.get('rc') == 0)

- name: set internal_have_locate
  set_fact:
    internal_have_locate: "{{ internal_have_locate_cmd.get('rc') == 0 and internal_test_locate.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_systemctl_cmd
  raw: export LANG=C LC_ALL=C; command -v systemctl
  register: internal_have_systemctl_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_systemctl
  set_fact:
    internal_have_systemctl: "{{ internal_have_systemctl_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_chkconfig_cmd
  raw: export LANG=C LC_ALL=C; command -v chkconfig
  register: internal_have_chkconfig_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_chkconfig
  set_fact:
    internal_have_chkconfig: "{{ internal_have_chkconfig_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_ifconfig_cmd
  raw: export LANG=C LC_ALL=C; command -v ifconfig
  register:  internal_have_ifconfig_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_ifconfig
  set_fact:
    internal_have_ifconfig: "{{ internal_have_ifconfig_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_ifconfig_user_cmd
  raw: export LANG=C LC_ALL=C; command -v ifconfig
  register:  internal_have_ifconfig_user_cmd
  ignore_errors: yes

- name: set internal_have_ifconfig_user
  set_fact:
    internal_have_ifconfig_user: "{{ internal_have_ifconfig_user_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_ip_cmd
  raw: export LANG=C LC_ALL=C; command -v ip
  register: internal_have_ip_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_ip
  set_fact:
    internal_have_ip: "{{ internal_have_ip_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_ip_user_cmd
  raw: export LANG=C LC_ALL=C; command -v ip
  register: internal_have_ip_user_cmd
  ignore_errors: yes

- name: set internal_have_ip_user
  set_fact:
    internal_have_ip_user: "{{ internal_have_ip_user_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_unzip_cmd
  raw: export LANG=C LC_ALL=C; command -v unzip
  register: internal_have_unzip_cmd
  become: yes
  ignore_errors: yes
  when: 'user_has_sudo'

- name: set internal_have_unzip
  set_fact:
    internal_have_unzip: "{{ internal_have_unzip_cmd.get('rc') == 0 }}"
  ignore_errors: yes

- name: gather internal_have_rct_user_cmd
  raw: export LANG=C LC_ALL=C; command -v rct
  register: internal_have_rct_user_cmd
  ignore_errors: yes

- name: set internal_have_rct_user
  set_fact:
    internal_have_rct_user: "{{ internal_have_rct_user_cmd.get('rc') == 0 }}"
