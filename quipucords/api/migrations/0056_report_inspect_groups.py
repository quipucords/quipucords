# Generated by Django 4.2.20 on 2025-04-09 12:58

from django.db import migrations, models


def copy_existing_inspect_groups_to_report(apps, schema_editor):
    """Copy existing InspectGroup instances to Report."""
    InspectGroup = apps.get_model("api", "InspectGroup")
    # use the "hidden" M2M model to avoid unnecessary queries
    M2MModel = InspectGroup.reports.through  # noqa: N806
    # the 2 queries below are equivalent to the commented code below, with the big
    # distinction being that the commented code would result in 3*N queries, where N is
    # the number of reports, while the implementation with the Through model always uses
    # a constant number of 2 queries.
    # >>> for report in Report.objects.all():
    # >>>     inspect_groups = InspectGroup.objects.filter(tasks__job__report_id=report.id)  # noqa: E501
    # >>>     report.inspect_groups.set(inspect_groups)
    id_pairs = (
        InspectGroup.objects.annotate(
            inspectgroup_id=models.F("id"), report_id=models.F("tasks__job__report_id")
        )
        .filter(report_id__isnull=False)
        .values("inspectgroup_id", "report_id")
        .all()
    )
    M2MModel.objects.bulk_create(M2MModel(**ids) for ids in id_pairs)


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0055_remove_systemfingerprint_user_login_history"),
    ]

    operations = [
        migrations.AddField(
            model_name="report",
            name="inspect_groups",
            field=models.ManyToManyField(related_name="reports", to="api.inspectgroup"),
        ),
        migrations.RunPython(
            copy_existing_inspect_groups_to_report,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
