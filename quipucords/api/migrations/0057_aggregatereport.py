# Generated by Django 4.2.20 on 2025-04-07 21:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0056_report_inspect_groups"),
    ]

    operations = [
        migrations.CreateModel(
            name="AggregateReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "ansible_hosts_all",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "ansible_hosts_in_database",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "ansible_hosts_in_jobs",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "inspect_result_status_failed",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "inspect_result_status_success",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "inspect_result_status_unknown",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "inspect_result_status_unreachable",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "instances_hypervisor",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "instances_not_redhat",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "instances_physical",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "instances_unknown",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "instances_virtual",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "jboss_eap_cores_physical",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "jboss_eap_cores_virtual",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "jboss_eap_instances",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "jboss_ws_cores_physical",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "jboss_ws_cores_virtual",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "jboss_ws_instances",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "missing_cpu_core_count",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "missing_cpu_socket_count",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "missing_name",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "missing_pem_files",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "missing_system_creation_date",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "missing_system_purpose",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "openshift_cores",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                ("openshift_operators_by_name", models.JSONField(default=dict)),
                ("openshift_operators_by_kind", models.JSONField(default=dict)),
                ("os_by_name_and_version", models.JSONField(default=dict)),
                (
                    "socket_pairs",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "system_creation_date_average",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "vmware_hosts",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "vmware_vm_to_host_ratio",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "vmware_vms",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "openshift_cluster_instances",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "openshift_node_instances",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aggregate_report",
                        to="api.report",
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
    ]
