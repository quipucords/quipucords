swagger: "2.0"
info:
  description: "The models and API for the Quipucords server."
  version: "1.0.0"
  title: "Quipucords API"
  contact:
    email: "quipucords@redhat.com"
  license:
    name: "GPL 3.0"
    url: "https://www.gnu.org/licenses/gpl-3.0.txt"

basePath: "/api/v1"

tags:
- name: "Host Credential"
  description: "API related to the Host Credential model"

paths:
  /facts/:
    post:
      tags:
        - "Fact"
      summary: "Publish facts from an environment scan"
      description: "Publish facts from environment scans"
      operationId: "publishFacts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Facts that need to be stored"
        required: true
        schema:
          $ref: "#/definitions/FactCollectionIn"
      responses:
        201:
          description: "Fact collection created"
          schema:
            $ref: "#/definitions/FactCollectionOut"
        400:
          description: "Invalid input"
  /credentials/hosts/:
    post:
      tags:
        - "Host Credential"
      summary: "Add a new host credential"
      description: "Create a new host credential for use when connecting to a target system."
      operationId: "addHostCredential"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Host credential object that needs to be stored"
        required: true
        schema:
          $ref: "#/definitions/HostCredential"
      responses:
        201:
          description: "Host credential created"
          schema:
            $ref: "#/definitions/HostCredentialOut"
        400:
          description: "Invalid input"
    get:
      tags:
        - "Host Credential"
      summary: "List exsiting host credentials"
      description: "List all host credential for use when connecting to a target system."
      operationId: "listHostCredentials"
      produces:
      - "application/json"
      parameters:
        - name: "name"
          in: "query"
          description: "A list of names representing host credentials"
          type: "string"
      responses:
        200:
          description: "Host credential retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HostCredentialOut"
  /credentials/hosts/{host_cred_id}:
    get:
      tags:
        - "Host Credential"
      summary: "Get an existing host credential"
      description: "Get a host credential for use when connecting to a target system."
      operationId: "getHostCredential"
      produces:
      - "application/json"
      parameters:
      - name: "host_cred_id"
        in: "path"
        description: "ID of host credential to retrieve"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Host credential retrieved"
          schema:
            $ref: "#/definitions/HostCredentialOut"
        404:
          description: "Host credential not found"
    put:
      tags:
        - "Host Credential"
      summary: "Update an existing host credential"
      description: "Update a host credential for use when connecting to a target system."
      operationId: "updateHostCredential"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "host_cred_id"
        in: "path"
        description: "ID of host credential to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Host credential object that needs to be modified"
        required: true
        schema:
          $ref: "#/definitions/HostCredential"
      responses:
        200:
          description: "Host credential updated"
          schema:
            $ref: "#/definitions/HostCredentialOut"
        400:
          description: "Invalid input"
        404:
          description: "Host credential not found"
    delete:
      tags:
        - "Host Credential"
      summary: "Delete an existing host credential"
      description: "Delete a host credential for use when connecting to a target system."
      operationId: "deleteHostCredential"
      produces:
      - "application/json"
      parameters:
      - name: "host_cred_id"
        in: "path"
        description: "ID of host credential to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Host credential deleted"
        404:
          description: "Host credential not found"
  /reports/:
    get:
      tags:
        - "Report"
      summary: "Retrieve list of reports for systems scanned"
      description: "List reports for systems that have been scanned."
      operationId: "listReports"
      produces:
      - "application/json"
      parameters:
        - name: "fact_collection_id"
          in: "query"
          description: "The Fact Collection ID to be queried"
          type: "string"
      responses:
        200:
          description: "List of reports for scanned systems"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SystemReportOut"
        404:
          description: "Report for fact collection id not found"
  /profiles/networks/:
    post:
      tags:
        - "Network Profile"
      summary: "Add a new network profile"
      description: "Create a new network profile for scanning."
      operationId: "addNetworkProfile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "JSON object representing new network profile"
          required: true
          schema:
            $ref: "#/definitions/NetworkProfileIn"
      responses:
        201:
          description: "Network profile created"
          schema:
            $ref: "#/definitions/NetworkProfileOut"
        400:
          description: "Invalid input"
    get:
      tags:
        - "Network Profile"
      summary: "List network profiles"
      description: "List all network profiles available for scanning."
      operationId: "listNetworkProfiles"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "query"
          description: "A list of names representing network profiles"
          type: "string"
      responses:
        200:
          description: "Network profiles retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NetworkProfileOut"
  /profiles/networks/{network_profile_id}:
    get:
      tags:
        - "Network Profile"
      summary: "Get a network profile"
      description: "Get a network profile."
      operationId: "getNetworkProfile"
      produces:
        - "application/json"
      parameters:
        - name: "network_profile_id"
          in: "path"
          description: "ID of network profile to retrieve"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Network profile returned"
          schema:
            $ref: "#/definitions/NetworkProfileOut"
        404:
          description: "Network profile not found"
    put:
      tags:
        - "Network Profile"
      summary: "Update an existing network profile"
      description: "Update an existing network profile"
      operationId: "updateNetworkProfile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "network_profile_id"
          in: "path"
          description: "ID of network profile to update"
          required: true
          type: "number"
          format: "int64"
        - name: "body"
          in: "body"
          description: "Network profile object to be modified"
          required: true
          schema:
            $ref: "#/definitions/NetworkProfileIn"
      responses:
        200:
          description: "Network profile updated"
          schema:
            $ref: "#/definitions/NetworkProfileOut"
        400:
          description: "Invalid input"
        404:
          description: "No network profile found"
    delete:
      tags:
        - "Network Profile"
      summary: "Delete an existing network profile"
      description: "Delete an existing network profile"
      operationId: "deleteNetworkProfile"
      produces:
        - "application/json"
      parameters:
        - name: "network_profile_id"
          in: "path"
          description: "ID of network profile to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: "Network profile deleted"
        404:
          description: "Network profile not found"
  /scans/:
    post:
      tags:
        - "Scan"
      summary: "Trigger a scan"
      description: "Create a new scan job."
      operationId: "triggerScan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Scan job object that tracks a scan"
        required: true
        schema:
          $ref: "#/definitions/ScanJobIn"
      responses:
        201:
          description: "Scan job created"
          schema:
            $ref: "#/definitions/ScanJobOut"
        400:
          description: "Invalid input"
    get:
      tags:
        - "Scan"
      summary: "List exsiting scan jobs"
      description: "List all scans."
      operationId: "listScanJobs"
      produces:
      - "application/json"
      responses:
        200:
          description: "Scan jobs retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ScanJobOut"
  /scans/{scan_job_id}:
    get:
      tags:
        - "Scan"
      summary: "Get an existing scan job"
      description: "Get a scan job's current status."
      operationId: "getScanJob"
      produces:
      - "application/json"
      parameters:
      - name: "scan_job_id"
        in: "path"
        description: "ID of scan job to retrieve"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Scan job retrieved"
          schema:
            $ref: "#/definitions/ScanJobOut"
        404:
          description: "Scan job not found"
  /scans/{scan_job_id}/results/:
    get:
      tags:
        - "Scan"
      summary: "Get the results of existing scan job"
      description: "Get the results of a scan."
      operationId: "getScanResults"
      produces:
      - "application/json"
      parameters:
      - name: "scan_job_id"
        in: "path"
        description: "ID of scan job to retrieve results for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Scan job results retrieved"
          schema:
            $ref: "#/definitions/ScanJobResultsOut"
        404:
          description: "Scan job results not found"
definitions:
  SystemFact:
    type: "object"
    required:
      - etc_release_name
      - etc_release_release
      - etc_release_version
      - connection_uuid
    properties:
        etc_release_name:
          type: "string"
          description: "The name of the operation system"
        etc_release_release:
          type: "string"
          description: "The release of the operating system"
        etc_release_version:
          type: "string"
          description: "The version of the operating system"
        connection_uuid:
          type: "string"
          description: "The UUID of the connection"
  FactCollectionIn:
    type: "object"
    required:
      - facts
    properties:
        facts:
          type: "array"
          items:
            $ref: "#/definitions/SystemFact"
          description: "The facts obtained during a scan"
  FactCollectionOut:
    type: "object"
    required:
      - id
      - facts
    properties:
        id:
          type: "integer"
          format: "int64"
          description: "The fact collection identifier"
        facts:
          type: "array"
          items:
            $ref: "#/definitions/SystemFact"
          description: "The facts obtained during a scan"

  HostCredential:
    type: "object"
    required:
      - name
      - username
      - password
      - ssh_keyfile
    properties:
        name:
          type: "string"
          description: "The name of the host credential"
        username:
          type: "string"
          description: "The connection username for the host credential"
        password:
          type: "string"
          description: "The connection password for the host credential"
        ssh_keyfile:
          type: "string"
          description: "The connection private ssh keyfile for the host credential"
        sudo_password:
          type: "string"
          description: "The password for sudo permission escalation after connection for the host credential"
  HostCredentialMin:
    type: "object"
    required:
      - id
      - name
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "The name of the host credential"
  HostCredentialOut:
    allOf:
      - $ref: "#/definitions/HostCredential"
      - type: "object"
        required:
          - id
        properties:
          id:
            type: "integer"
            format: "int64"
  SystemReport:
    type: "object"
    required:
      - os_release
      - count
    properties:
        os_release:
          type: "string"
          description: "The operating system release"
        count:
          type: "integer"
          format: "int64"
          description: "The number of times this operating system appears in the scanned environment"
  SystemReportOut:
    properties:
        fact_collection_id:
          type: "string"
          description: "The fact collection id associate with report"
        report:
          type: "array"
          items:
            $ref: "#/definitions/SystemReport"
          description: "The report for the systems that were scanned"
  NetworkProfile:
    type: "object"
    required:
      - name
      - hosts
      - ssh_port
    properties:
      name:
        type: "string"
        description: "The name of the network profile"
      hosts:
        type: "array"
        items:
          type: "string"
        description: "The hosts on the network, as hostnames or IP ranges."
      ssh_port:
        type: "integer"
        format: "int32"
        description: "The SSH port to use on the hosts."
  NetworkProfileMin:
    type: "object"
    required:
      - id
      - name
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "The name of the network profile"
  NetworkProfileIn:
    allOf:
      - $ref: "#/definitions/NetworkProfile"
      - type: "object"
        required:
          - credentials
        properties:
          credentials:
            type: "array"
            items:
              type: "integer"
              format: "int64"
            description: "The host credentials to try with these hosts."
  NetworkProfileOut:
    allOf:
      - $ref: "#/definitions/NetworkProfile"
      - type: "object"
        required:
          - id
          - credentials
        properties:
          id:
            type: "integer"
            format: "int64"
          credentials:
            type: "array"
            items:
              $ref: "#/definitions/HostCredentialMin"
            description: "The host credentials to try with these hosts."
  ScanJob:
    type: "object"
    properties:
        scan_type:
          type: "string"
          description: "The type of scan. 'host' is the default."
          enum:
            - host
            - discovery
  ScanJobIn:
    allOf:
      - $ref: "#/definitions/ScanJob"
      - type: "object"
        required:
          - profile
        properties:
          profile:
            type: "integer"
            format: "int64"
            description: "The identifier of a network profile"
  ScanJobOut:
    allOf:
      - $ref: "#/definitions/ScanJob"
      - type: "object"
        required:
          - id
          - profile
        properties:
          id:
            type: "integer"
            format: "int64"
          profile:
            $ref: "#/definitions/NetworkProfileMin"
            description: "The identifier of a network profile"
  ScanResultColumn:
    type: "object"
    required:
      - key
      - value
    properties:
        key:
          type: "string"
          description: "The name result data."
        value:
          type: "string"
          description: "The value of the result data."
  ScanResultRow:
    type: "object"
    required:
      - columns
    properties:
      row:
        type: "string"
        description: "The name for the row of results."
      columns:
        type: "array"
        items:
          $ref: "#/definitions/ScanResultColumn"
        description: "An array of key value pairs of result data."
  ScanJobResultsOut:
    type: "object"
    required:
      - scan_job
      - results
    properties:
        scan_job:
          type: "integer"
          format: "int64"
        fact_collection_id:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: "#/definitions/ScanResultRow"
          description: "The results of scan job."
